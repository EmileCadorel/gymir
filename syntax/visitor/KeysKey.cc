#include <ymir/syntax/visitor/KeysKey.hh>

const Ymir::Dictionnary::Key	TokenKey::ATOMIC       = Dictionnary::insert (Token::ATOMIC);
const Ymir::Dictionnary::Key	TokenKey::ABSTRACT     = Dictionnary::insert (Token::ABSTRACT);
const Ymir::Dictionnary::Key	TokenKey::ALIAS	       = Dictionnary::insert (Token::ALIAS);
const Ymir::Dictionnary::Key	TokenKey::ANTI	       = Dictionnary::insert (Token::ANTI); 
const Ymir::Dictionnary::Key	TokenKey::ASSERT       = Dictionnary::insert (Token::ASSERT);
const Ymir::Dictionnary::Key	TokenKey::ATTRIBUTE    = Dictionnary::insert (Token::ATTRIBUTE);
const Ymir::Dictionnary::Key	TokenKey::BODY	       = Dictionnary::insert (Token::BODY);
const Ymir::Dictionnary::Key	TokenKey::BREAK	       = Dictionnary::insert (Token::BREAK); 
const Ymir::Dictionnary::Key	TokenKey::C16	       = Dictionnary::insert (Token::C16);
const Ymir::Dictionnary::Key	TokenKey::C32	       = Dictionnary::insert (Token::C32);
const Ymir::Dictionnary::Key	TokenKey::C8	       = Dictionnary::insert (Token::C8);
const Ymir::Dictionnary::Key	TokenKey::CAST	       = Dictionnary::insert (Token::CAST);
const Ymir::Dictionnary::Key	TokenKey::CATCH	       = Dictionnary::insert (Token::CATCH); 
const Ymir::Dictionnary::Key	TokenKey::CLANG	       = Dictionnary::insert (Token::CLANG);
const Ymir::Dictionnary::Key	TokenKey::CLASS	       = Dictionnary::insert (Token::CLASS);
const Ymir::Dictionnary::Key	TokenKey::COMPILE      = Dictionnary::insert (Token::COMPILE);
const Ymir::Dictionnary::Key	TokenKey::CONST	       = Dictionnary::insert (Token::CONST);
const Ymir::Dictionnary::Key	TokenKey::COPY	       = Dictionnary::insert (Token::COPY);
const Ymir::Dictionnary::Key	TokenKey::CPPLANG      = Dictionnary::insert (Token::CPPLANG);
const Ymir::Dictionnary::Key	TokenKey::DCOPY	       = Dictionnary::insert (Token::DCOPY);
const Ymir::Dictionnary::Key	TokenKey::DEF	       = Dictionnary::insert (Token::DEF);
const Ymir::Dictionnary::Key	TokenKey::DELEGATE     = Dictionnary::insert (Token::DELEGATE); 
const Ymir::Dictionnary::Key	TokenKey::DLANG	       = Dictionnary::insert (Token::DLANG);
const Ymir::Dictionnary::Key	TokenKey::DMUTABLE     = Dictionnary::insert (Token::DMUTABLE); 
const Ymir::Dictionnary::Key	TokenKey::DO	       = Dictionnary::insert (Token::DO);
const Ymir::Dictionnary::Key	TokenKey::DPAR	       = Dictionnary::insert (Token::DPAR);
const Ymir::Dictionnary::Key	TokenKey::DYNAMIC      = Dictionnary::insert (Token::DYNAMIC);
const Ymir::Dictionnary::Key	TokenKey::ELSE	       = Dictionnary::insert (Token::ELSE); 
const Ymir::Dictionnary::Key	TokenKey::ENUM	       = Dictionnary::insert (Token::ENUM); 
const Ymir::Dictionnary::Key	TokenKey::EXIT	       = Dictionnary::insert (Token::EXIT);
const Ymir::Dictionnary::Key	TokenKey::EXPAND       = Dictionnary::insert (Token::EXPAND); 
const Ymir::Dictionnary::Key	TokenKey::EXTERN       = Dictionnary::insert (Token::EXTERN); 
const Ymir::Dictionnary::Key	TokenKey::FAILURE      = Dictionnary::insert (Token::FAILURE);
const Ymir::Dictionnary::Key	TokenKey::FALSE_       = Dictionnary::insert (Token::FALSE_);
const Ymir::Dictionnary::Key	TokenKey::FINAL_       = Dictionnary::insert (Token::FINAL_);
const Ymir::Dictionnary::Key	TokenKey::FLOAT_S      = Dictionnary::insert (Token::FLOAT_S);    
const Ymir::Dictionnary::Key	TokenKey::FOR	       = Dictionnary::insert (Token::FOR); 
const Ymir::Dictionnary::Key	TokenKey::FROM	       = Dictionnary::insert (Token::FROM); 
const Ymir::Dictionnary::Key	TokenKey::FUNCTION     = Dictionnary::insert (Token::FUNCTION);
const Ymir::Dictionnary::Key	TokenKey::I16	       = Dictionnary::insert (Token::I16);
const Ymir::Dictionnary::Key	TokenKey::I32	       = Dictionnary::insert (Token::I32);
const Ymir::Dictionnary::Key	TokenKey::I64	       = Dictionnary::insert (Token::I64);
const Ymir::Dictionnary::Key	TokenKey::I8	       = Dictionnary::insert (Token::I8);
const Ymir::Dictionnary::Key	TokenKey::IF	       = Dictionnary::insert (Token::IF); 
const Ymir::Dictionnary::Key	TokenKey::IMMUTABLE    = Dictionnary::insert (Token::IMMUTABLE);
const Ymir::Dictionnary::Key	TokenKey::IMPL	       = Dictionnary::insert (Token::IMPL); 
const Ymir::Dictionnary::Key	TokenKey::IMPORT       = Dictionnary::insert (Token::IMPORT);
const Ymir::Dictionnary::Key	TokenKey::IN	       = Dictionnary::insert (Token::IN);
const Ymir::Dictionnary::Key	TokenKey::INIT	       = Dictionnary::insert (Token::INIT);
const Ymir::Dictionnary::Key	TokenKey::INLINE       = Dictionnary::insert (Token::INLINE);
const Ymir::Dictionnary::Key	TokenKey::IS	       = Dictionnary::insert (Token::IS); 
const Ymir::Dictionnary::Key	TokenKey::ISIZE	       = Dictionnary::insert (Token::ISIZE);
const Ymir::Dictionnary::Key	TokenKey::LET	       = Dictionnary::insert (Token::LET); 
const Ymir::Dictionnary::Key	TokenKey::LOOP	       = Dictionnary::insert (Token::LOOP);
const Ymir::Dictionnary::Key	TokenKey::LX	       = Dictionnary::insert (Token::LX); 
const Ymir::Dictionnary::Key	TokenKey::MACRO	       = Dictionnary::insert (Token::MACRO);
const Ymir::Dictionnary::Key	TokenKey::MACRO_BLOCK  = Dictionnary::insert (Token::MACRO_BLOCK);
const Ymir::Dictionnary::Key	TokenKey::MACRO_EXPR   = Dictionnary::insert (Token::MACRO_EXPR);
const Ymir::Dictionnary::Key	TokenKey::MACRO_IDENT  = Dictionnary::insert (Token::MACRO_IDENT);
const Ymir::Dictionnary::Key	TokenKey::MACRO_TOKEN  = Dictionnary::insert (Token::MACRO_TOKEN);
const Ymir::Dictionnary::Key	TokenKey::MAIN	       = Dictionnary::insert (Token::MAIN); 
const Ymir::Dictionnary::Key	TokenKey::MATCH	       = Dictionnary::insert (Token::MATCH); 
const Ymir::Dictionnary::Key	TokenKey::MOD	       = Dictionnary::insert (Token::MOD);
const Ymir::Dictionnary::Key	TokenKey::MOVE	       = Dictionnary::insert (Token::MOVE);
const Ymir::Dictionnary::Key	TokenKey::MUTABLE      = Dictionnary::insert (Token::MUTABLE);
const Ymir::Dictionnary::Key	TokenKey::NEW	       = Dictionnary::insert (Token::NEW);
const Ymir::Dictionnary::Key	TokenKey::NOGC	       = Dictionnary::insert (Token::NOGC);
const Ymir::Dictionnary::Key	TokenKey::NOT_IN       = Dictionnary::insert (Token::NOT_IN); 
const Ymir::Dictionnary::Key	TokenKey::NOT_IS       = Dictionnary::insert (Token::NOT_IS);
const Ymir::Dictionnary::Key	TokenKey::NOT_OF       = Dictionnary::insert (Token::NOT_OF);
const Ymir::Dictionnary::Key	TokenKey::NULL_	       = Dictionnary::insert (Token::NULL_); 
const Ymir::Dictionnary::Key	TokenKey::OF	       = Dictionnary::insert (Token::OF);
const Ymir::Dictionnary::Key	TokenKey::OPACCESS     = Dictionnary::insert (Token::OPACCESS);
const Ymir::Dictionnary::Key	TokenKey::OPAPPLYBEGIN = Dictionnary::insert (Token::OPAPPLYBEGIN);
const Ymir::Dictionnary::Key	TokenKey::OPAPPLYEND   = Dictionnary::insert (Token::OPAPPLYEND);
const Ymir::Dictionnary::Key	TokenKey::OPAPPLYGET   = Dictionnary::insert (Token::OPAPPLYGET);
const Ymir::Dictionnary::Key	TokenKey::OPAPPLYITER  = Dictionnary::insert (Token::OPAPPLYITER);
const Ymir::Dictionnary::Key	TokenKey::OPASSIGN     = Dictionnary::insert (Token::OPASSIGN); 
const Ymir::Dictionnary::Key	TokenKey::OPBINARY     = Dictionnary::insert (Token::OPBINARY); 
const Ymir::Dictionnary::Key	TokenKey::OPBINARYR    = Dictionnary::insert (Token::OPBINARYR); 
const Ymir::Dictionnary::Key	TokenKey::OPCALL       = Dictionnary::insert (Token::OPCALL); 
const Ymir::Dictionnary::Key	TokenKey::OPEQUAL      = Dictionnary::insert (Token::OPEQUAL); 
const Ymir::Dictionnary::Key	TokenKey::OPRANGE      = Dictionnary::insert (Token::OPRANGE); 
const Ymir::Dictionnary::Key	TokenKey::OPTEST       = Dictionnary::insert (Token::OPTEST); 
const Ymir::Dictionnary::Key	TokenKey::OPUNARY      = Dictionnary::insert (Token::OPUNARY); 
const Ymir::Dictionnary::Key	TokenKey::OVER	       = Dictionnary::insert (Token::OVER); 
const Ymir::Dictionnary::Key	TokenKey::PACKED       = Dictionnary::insert (Token::PACKED);
const Ymir::Dictionnary::Key	TokenKey::POST	       = Dictionnary::insert (Token::POST);
const Ymir::Dictionnary::Key	TokenKey::PRAGMA       = Dictionnary::insert (Token::PRAGMA);
const Ymir::Dictionnary::Key	TokenKey::PRE	       = Dictionnary::insert (Token::PRE);
const Ymir::Dictionnary::Key	TokenKey::PRIVATE      = Dictionnary::insert (Token::PRIVATE); 
const Ymir::Dictionnary::Key	TokenKey::PROTECTED    = Dictionnary::insert (Token::PROTECTED); 
const Ymir::Dictionnary::Key	TokenKey::PUBLIC       = Dictionnary::insert (Token::PUBLIC); 
const Ymir::Dictionnary::Key	TokenKey::PURE	       = Dictionnary::insert (Token::PURE);
const Ymir::Dictionnary::Key	TokenKey::REF	       = Dictionnary::insert (Token::REF); 
const Ymir::Dictionnary::Key	TokenKey::RETURN       = Dictionnary::insert (Token::RETURN);
const Ymir::Dictionnary::Key	TokenKey::S16	       = Dictionnary::insert (Token::S16);
const Ymir::Dictionnary::Key	TokenKey::S32	       = Dictionnary::insert (Token::S32);
const Ymir::Dictionnary::Key	TokenKey::S8	       = Dictionnary::insert (Token::S8);
const Ymir::Dictionnary::Key	TokenKey::SCOPE	       = Dictionnary::insert (Token::SCOPE); 
const Ymir::Dictionnary::Key	TokenKey::SELF	       = Dictionnary::insert (Token::SELF);
const Ymir::Dictionnary::Key	TokenKey::SELF_TILDE   = Dictionnary::insert (Token::SELF_TILDE); 
const Ymir::Dictionnary::Key	TokenKey::SIZEOF       = Dictionnary::insert (Token::SIZEOF);
const Ymir::Dictionnary::Key	TokenKey::SKIPS	       = Dictionnary::insert (Token::SKIPS);
const Ymir::Dictionnary::Key	TokenKey::STATIC       = Dictionnary::insert (Token::STATIC); 
const Ymir::Dictionnary::Key	TokenKey::STRINGOF     = Dictionnary::insert (Token::STRINGOF); 
const Ymir::Dictionnary::Key	TokenKey::STRUCT       = Dictionnary::insert (Token::STRUCT);
const Ymir::Dictionnary::Key	TokenKey::SUCCESS      = Dictionnary::insert (Token::SUCCESS);
const Ymir::Dictionnary::Key	TokenKey::SUPER	       = Dictionnary::insert (Token::SUPER);
const Ymir::Dictionnary::Key	TokenKey::TEMPLATE     = Dictionnary::insert (Token::TEMPLATE);
const Ymir::Dictionnary::Key	TokenKey::THROWS       = Dictionnary::insert (Token::THROWS);
const Ymir::Dictionnary::Key	TokenKey::THROW_K      = Dictionnary::insert (Token::THROW_K);
const Ymir::Dictionnary::Key	TokenKey::TRAIT	       = Dictionnary::insert (Token::TRAIT); 
const Ymir::Dictionnary::Key	TokenKey::TRUE_	       = Dictionnary::insert (Token::TRUE_); 
const Ymir::Dictionnary::Key	TokenKey::TRUSTED      = Dictionnary::insert (Token::TRUSTED);
const Ymir::Dictionnary::Key	TokenKey::TUPLE	       = Dictionnary::insert (Token::TUPLE); 
const Ymir::Dictionnary::Key	TokenKey::TYPEOF       = Dictionnary::insert (Token::TYPEOF);
const Ymir::Dictionnary::Key	TokenKey::U16	       = Dictionnary::insert (Token::U16);
const Ymir::Dictionnary::Key	TokenKey::U32	       = Dictionnary::insert (Token::U32);
const Ymir::Dictionnary::Key	TokenKey::U64	       = Dictionnary::insert (Token::U64);
const Ymir::Dictionnary::Key	TokenKey::U8	       = Dictionnary::insert (Token::U8);
const Ymir::Dictionnary::Key	TokenKey::UNDER	       = Dictionnary::insert (Token::UNDER); 
const Ymir::Dictionnary::Key	TokenKey::UNION	       = Dictionnary::insert (Token::UNION);
const Ymir::Dictionnary::Key	TokenKey::USE	       = Dictionnary::insert (Token::USE);
const Ymir::Dictionnary::Key	TokenKey::USIZE	       = Dictionnary::insert (Token::USIZE);    
const Ymir::Dictionnary::Key	TokenKey::VERSION      = Dictionnary::insert (Token::VERSION);
const Ymir::Dictionnary::Key	TokenKey::VTABLE_FIELD = Dictionnary::insert (Token::VTABLE_FIELD);
const Ymir::Dictionnary::Key	TokenKey::WHILE	       = Dictionnary::insert (Token::WHILE);
const Ymir::Dictionnary::Key	TokenKey::WITH	       = Dictionnary::insert (Token::WITH);
const Ymir::Dictionnary::Key	TokenKey::YLANG	       = Dictionnary::insert (Token::YLANG);
const Ymir::Dictionnary::Key	TokenKey::OPERATOR     = Dictionnary::insert (Token::OPERATOR);
const Ymir::Dictionnary::Key	TokenKey::LEN	       = Dictionnary::insert (Token::LEN);
const Ymir::Dictionnary::Key	TokenKey::MANGLE       = Dictionnary::insert (Token::MANGLE);
const Ymir::Dictionnary::Key	TokenKey::OK_	       = Dictionnary::insert (Token::OK_);
const Ymir::Dictionnary::Key	TokenKey::ERR_	       = Dictionnary::insert (Token::ERR_);
