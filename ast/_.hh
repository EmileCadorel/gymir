#pragma once

#include <vector>
#include <map>
#include <string>
#include <sstream>

#include "Access.hh"
#include "ArrayAlloc.hh"
#include "Assert.hh"
#include "Binary.hh"
#include "Block.hh"
#include "Break.hh"
#include "Cast.hh"
#include "Constante.hh"
#include "ConstArray.hh"
#include "ConstRange.hh"
#include "Constructor.hh"
#include "DColon.hh"
#include "Declaration.hh"
#include "Dot.hh"
#include "Enum.hh"
#include "Expand.hh"
#include "Expression.hh"
#include "For.hh"
#include "FuncPtr.hh"
#include "Function.hh"
#include "Global.hh"
#include "If.hh"
#include "Import.hh"
#include "Instruction.hh"
#include "Is.hh"
#include "LambdaFunc.hh"
#include "Match.hh"
#include "Mixin.hh"
#include "OfVar.hh"
#include "ParamList.hh"
#include "Par.hh"
#include "Program.hh"
#include "Proto.hh"
#include "Return.hh"
#include "Self.hh"
#include "Struct.hh"
#include "TreeExpression.hh"
#include "TupleDest.hh"
#include "Tuple.hh"
#include "TypedVar.hh"
#include "Type.hh"
#include "TypeOf.hh"
#include "Unary.hh"
#include "VarDecl.hh"
#include "Var.hh"
#include "While.hh"
#include "StructCst.hh"
#include "Module.hh"
#include "Use.hh"
#include "Scope.hh"
#include "Pragma.hh"
#include "Macro.hh"
#include "StringOf.hh"
#include "AffectGeneric.hh"
#include "TypeCreator.hh"
