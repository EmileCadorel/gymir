

GYC_INSTALL_NAME := $(shell echo gyc|sed '$(program_transform_name)')
GYC_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gyc|sed '$(program_transform_name)')

ymir: ymir1$(exeext)
 
.PHONY: ymir

GYC_INCLUDES = -I$(srcdir)/../include -I$(srcdir)/ -I$(srcdir)/gcc -I../gcc -I$(srcdir)/../libcpp/include

CFLAGS-ymir/gycspec.o += $(DRIVER_DEFINES)

# Driver
GYC_OBJS = $(GCC_OBJS) ymir/gycspec.o
 
gyc$(exeext): $(GYC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GYC_INCLUDES) -o $@ \
	  $(GYC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
	  $(EXTRA_GCC_LIBS) $(LIBS)


YCOMPILE.base = $(CXX) $(NO_PIE_CFLAGS) -c $(ALL_DFLAGS) -o $@
YCOMPILE = $(YCOMPILE.base) -MT $@ -MMD -MP -MF $(@D)/$(DEPDIR)/$(*F).TPo
YPOSTCOMPILE = @mv $(@D)/$(DEPDIR)/$(*F).TPo $(@D)/$(DEPDIR)/$(*F).Po
YLINKER = $(CXX) $(NO_PIE_FLAG) -lstdc++

# The compiler proper
 
ymir_OBJS = \
	ymir/ymir1.o \
	ymir/Word.o \
	ymir/Token.o \
	ymir/Range.o \
	ymir/Lexer.o \
	ymir/Error.o \
	ymir/OutBuffer.o \
	ymir/Colors.o	 \
	ymir/ListError.o \
	ymir/Exception.o \
	ymir/Enum.o \
	ymir/Memory.o \
	ymir/Parser.o \
	$(END)	

ymir1$(exeext): attribs.o $(ymir_OBJS) $(BACKEND) $(LIBDEPS)
	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
	attribs.o $(ymir_OBJS) $(BACKEND) $(LIBS) $(BACKENDLIBS)
 
ymir.all.cross: 
 
ymir.start.encap: gyc$(exeext)
ymir.rest.encap:

selftest-ymir:

ymir.install-common: installdirs
	-rm -f $(DESTDIR)$(bindir)/$(GYC_INSTALL_NAME)$(exeext)
	$(INSTALL_PROGRAM) gyc$(exeext) $(DESTDIR)$(bindir)/$(GYC_INSTALL_NAME)$(exeext)
	rm -f $(DESTDIR)$(bindir)/$(GYC_TARGET_INSTALL_NAME)$(exeext); \
	( cd $(DESTDIR)$(bindir) && \
      $(LN) $(GYC_INSTALL_NAME)$(exeext) $(GYC_TARGET_INSTALL_NAME)$(exeext) ); \
 
# Required goals, they still do nothing
ymir.install-man:
ymir.install-info:
ymir.install-pdf:
ymir.install-plugin:
ymir.install-html:
ymir.info:
ymir.dvi:
ymir.pdf:
ymir.html:
ymir.man:
ymir.mostlyclean:
ymir.clean:
ymir.distclean:
ymir.maintainer-clean:


# make uninstall
ymir.uninstall:

	-rm -f gyc$(exeext) ymir1$(exeext)
	-rm -f $(ymir_OBJS)
 
# Used for handling bootstrap
ymir.stage1: stage1-start
	-mv ymir/*$(objext) stage1/ymir
ymir.stage2: stage2-start
	-mv ymir/*$(objext) stage2/ymir
ymir.stage3: stage3-start
	-mv ymir/*$(objext) stage3/ymir
ymir.stage4: stage4-start
	-mv ymir/*$(objext) stage4/ymir
ymir.stageprofile: stageprofile-start
	-mv ymir/*$(objext) stageprofile/ymir
ymir.stagefeedback: stagefeedback-start
	-mv ymir/*$(objext) stagefeedback/ymir

ymir/%.o: ymir/lexing/%.cc
	  $(YCOMPILE) $(GYC_INCLUDES) $<
	  $(YPOSTCOMPILE)

ymir/%.o: ymir/utils/%.cc
	  $(YCOMPILE) $(GYC_INCLUDES) $<
	  $(YPOSTCOMPILE)

ymir/%.o: ymir/errors/%.cc
	  $(YCOMPILE) $(GYC_INCLUDES) $<
	  $(YPOSTCOMPILE)

ymir/%.o: ymir/parsing/%.cc
	  $(YCOMPILE) $(GYC_INCLUDES) $<
	  $(YPOSTCOMPILE)

ymir/%.o: ymir/syntax/%.cc
	  $(YCOMPILE) $(GYC_INCLUDES) $<
	  $(YPOSTCOMPILE)

